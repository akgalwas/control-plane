apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: connectivity-proxy
  name: connectivity-proxy-reconciler
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: connectivity-proxy
  replicas: {{ default .Values.deployment.replicasCount (.Values.deployment).replicasCount }}
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: connectivity-proxy
    spec:
      serviceAccountName: component-reconcilers-connectivity-proxy
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - image: "{{ .Values.global.images.component_reconciler }}"
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          args:
            - reconciler
            - start
            - connectivity-proxy
            - --workspace=/tmp/reconciler
          {{- if .Values.options.verbose }}
            - --verbose
          {{- end }}
            - --worker-count={{ default .Values.options.workerCount (.Values.options).workerCount }}
        {{- if or ((.Values.deployment).gitCloneToken) ($.Values.global.mothership_reconciler.features)  }}
          env:
        {{- if (.Values.deployment).gitCloneToken }}
            - name: GIT_CLONE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: connectivity-proxy-git-token
                  key: token
        {{- end }}
        {{- if ($.Values.global.mothership_reconciler.features) }}
        {{- ($.Values.global.mothership_reconciler.features) | nindent 8 }}
        {{- end }}
        {{- end }}
          name: connectivity-proxy-reconciler
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          resources:
          {{- toYaml (default .Values.deployment.resources (.Values.deployment).resources) | nindent 10 }}
          volumeMounts:
            - mountPath: /tmp
              name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
        - emptyDir: {}
          name: workspace
---

